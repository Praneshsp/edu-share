name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  sonar_scan:
    runs-on: ubuntu-latest
    needs: security-check
    if: ${{ github.event.inputs.skip_sonarqube != 'true' }} # Skips if skip_sonarqube is 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: "http://${{ secrets.EC2_HOST }}:9000"
        with:
          args: >
            -Dsonar.projectKey=my-nodejs-project
            -Dsonar.projectName=MyNodeJSProject
            -Dsonar.sources=.
            -Dsonar.language=js
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Check Prometheus Health
        run: |
          curl -s -o /dev/null -w "%{http_code}" ${{ secrets.PROMETHEUS_URL }}/-/healthy

  deploy:
    runs-on: ubuntu-latest
    needs: [sonar_scan, monitor] # Deploy only if SonarQube & Prometheus checks pass
    steps:
      - name: SSH into EC2 & Deploy Application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ”¹ Pulling latest code..."
            cd ~/edu-share || git clone https://github.com/Praneshsp/edu-share.git ~/edu-share
            cd ~/edu-share
            git pull origin main

            echo "ðŸ”¹ Installing dependencies..."
            npm install

            echo "ðŸ”¹ Setting environment variables..."
            export EMAIL_FROM="${{ secrets.EMAIL_FROM }}"
            export GOOGLE_API_KEY="${{ secrets.GOOGLE_API_KEY }}"
            export GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
            export GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
            export GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}"
            export GOOGLE_REFRESH_TOKEN="${{ secrets.GOOGLE_REFRESH_TOKEN }}"
            export NEXT_PUBLIC_SUPABASE_ANON_KEY="${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}"
            export NEXT_PUBLIC_SUPABASE_URL="${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}"

            echo "ðŸ”¹ Stopping old process..."
            pm2 stop all || echo "No process found"

            echo "ðŸ”¹ Starting the Next.js app..."
            pm2 start npm --name "next-app" -- run start
